AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  Prefix:
    Type: String
  LayerName:
    Type: String
    Default: "testpandaslayer"


Resources:
  S3Bucket: 
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: Private
      BucketEncryption:
           ServerSideEncryptionConfiguration:
                - ServerSideEncryptionByDefault:
                       SSEAlgorithm: AES256
      BucketName: test-lambda-layers-bucket-1234
      PublicAccessBlockConfiguration:
           BlockPublicAcls: TRUE
           BlockPublicPolicy: TRUE
           IgnorePublicAcls: true
           RestrictPublicBuckets: true
  
  HelloWorldLayer:
    Type: "AWS::Lambda::LayerVersion"
    Properties:
      CompatibleRuntimes:
           - python2.7
           - python3.6
           - python3.7
           - python3.8
           - python3.9
      Content:
           S3Bucket: !Ref S3Bucket
           S3Key: !Ref LayerName


  Function1:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - arm64
      Code:
        ZipFile: |
          from mylayer import mylayer

          def my_handler(event, context):
            message = "Hello Lambda World"
            return message
      FunctionName: !Sub "${Prefix}-function-01"
      Handler: index.myhandler
      Layers:
        - !Ref HelloWorldLayer
      Runtime: python3.8
      Role: !GetAtt FunctionRole1.Arn

  FunctionRole1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
            - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

